apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  labels:
    boson.dev/function: "true"
    boson.dev/runtime: node
    function.knative.dev: "true"
    function.knative.dev/name: viewer
    function.knative.dev/runtime: node
    tekton.dev/pipeline: test-function-pac
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[main]"

    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    pipelinesascode.tekton.dev/task: "git-clone"

    # Task for Nodejs
    pipelinesascode.tekton.dev/task-1: "https://raw.githubusercontent.com/knative/func/main/pipelines/resources/tekton/task/func-buildpacks/0.1/func-buildpacks.yaml"
    pipelinesascode.tekton.dev/task-2: "https://raw.githubusercontent.com/knative/func/main/pipelines/resources/tekton/task/func-deploy/0.1/func-deploy.yaml"


    pipelinesascode.tekton.dev/pipeline: "[.tekton/pipeline-pack.yaml]"

    # How many runs we want to keep attached to this event
    pipelinesascode.tekton.dev/max-keep-runs: "5"
  generateName: test-function-pac-x
spec:
  params:
    - name: gitRepository
      value: "{{ repo_url }}"
    - name: gitRevision
      value: "{{ revision }}"
    - name: contextDir
      value: ''
    - name: imageName
      value: >-
        image-registry.openshift-image-registry.svc:5000/demo/test-function-pac:latest
    - name: builderImage
      value: 'gcr.io/paketo-buildpacks/builder:base'
    - name: buildEnvs
      value:
        - =
  pipelineRef:
    name: test-function-pac-git-pipeline
  serviceAccountName: pipeline
  timeout: 1h0m0s
  # workspaces:
  #   - name: source-workspace
  #     persistentVolumeClaim:
  #       claimName: test-function-pac-pack-upload-pipeline-pvc
  #     subPath: source
  #   - name: cache-workspace
  #     persistentVolumeClaim:
  #       claimName: test-function-pac-pack-upload-pipeline-pvc
  #     subPath: cache
  #   - name: dockerconfig-workspace
  #     secret:
  #       secretName: test-function-pac-pack-upload-pipeline-secret
  workspaces:
    - name: source-workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
      subPath: source
    - name: cache-workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
      subPath: cache
    - name: dockerconfig-workspace
      secret:
        secretName: test-function-pac-pack-git-pipeline-secret