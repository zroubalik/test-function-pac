apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    boson.dev/function: "true"
    boson.dev/runtime: node
    function.knative.dev: "true"
    function.knative.dev/name: viewer
    function.knative.dev/runtime: node
  annotations:
    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    pipelinesascode.tekton.dev/task: "git-clone"

    pipelinesascode.tekton.dev/task-1: "https://raw.githubusercontent.com/knative/func/main/pipelines/resources/tekton/task/func-s2i/0.1/func-s2i.yaml"
    pipelinesascode.tekton.dev/task-2: "https://raw.githubusercontent.com/knative/func/main/pipelines/resources/tekton/task/func-deploy/0.1/func-deploy.yaml"

    # How many runs we want to keep attached to this event
    pipelinesascode.tekton.dev/max-keep-runs: "5"
  name: test-function-pac-s2i-git-pipeline
spec:
  params:
  - default: ''
    description: Git repository that hosts the function project
    name: gitRepository
    type: string
  - description: Git revision to build
    name: gitRevision
    type: string
  - default: ""
    description: Path where the function project is
    name: contextDir
    type: string
  - description: Function image name
    name: imageName
    type: string
  - description: Builder image to be used
    name: builderImage
    type: string
  - description: Environment variables to set during build time
    name: buildEnvs
    type: array
  - default: image:///usr/libexec/s2i
    description: URL containing the default assemble and run scripts for the builder
      image.
    name: s2iImageScriptsUrl
    type: string
  tasks:
  - name: fetch-sources
    params:
    - name: url
      value: $(params.gitRepository)
    - name: revision
      value: $(params.gitRevision)
    taskRef:
      kind: Task
      name: git-clone
    workspaces:
    - name: output
      workspace: source-workspace
  - name: build
    params:
    - name: IMAGE
      value: $(params.imageName)
    - name: PATH_CONTEXT
      value: $(params.contextDir)
    - name: BUILDER_IMAGE
      value: $(params.builderImage)
    - name: ENV_VARS
      value:
      - $(params.buildEnvs[*])
    - name: S2I_IMAGE_SCRIPTS_URL
      value: $(params.s2iImageScriptsUrl)
    runAfter:
    - fetch-sources
    taskRef:
      kind: Task
      name: func-s2i
    workspaces:
    - name: source
      workspace: source-workspace
    - name: dockerconfig
      workspace: dockerconfig-workspace
  - name: deploy
    params:
    - name: path
      value: $(workspaces.source.path)/$(params.contextDir)
    - name: image
      value: $(params.imageName)@$(tasks.build.results.IMAGE_DIGEST)
    runAfter:
    - build
    taskRef:
      kind: Task
      name: func-deploy
    workspaces:
    - name: source
      workspace: source-workspace
  workspaces:
  - description: Directory where function source is located.
    name: source-workspace
  - description: Directory containing image registry credentials stored in `config.json`
      file.
    name: dockerconfig-workspace
    optional: true
