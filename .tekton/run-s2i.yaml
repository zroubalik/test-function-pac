apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  labels:
    boson.dev/function: "true"
    boson.dev/runtime: node
    function.knative.dev: "true"
    function.knative.dev/name: viewer
    function.knative.dev/runtime: node
    tekton.dev/pipeline: test-function-s2i-pac
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[main]"

    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    pipelinesascode.tekton.dev/task: "git-clone"

    pipelinesascode.tekton.dev/task-1: "https://raw.githubusercontent.com/knative/func/main/pipelines/resources/tekton/task/func-s2i/0.1/func-s2i.yaml"
    pipelinesascode.tekton.dev/task-2: "https://raw.githubusercontent.com/knative/func/main/pipelines/resources/tekton/task/func-deploy/0.1/func-deploy.yaml"

    pipelinesascode.tekton.dev/pipeline: "[.tekton/pipeline-s2i.yaml]"

    # How many runs we want to keep attached to this event
    pipelinesascode.tekton.dev/max-keep-runs: "5"
  generateName: test-function-s2i-pac
spec:
  params:
    - name: gitRepository
      value: "{{ repo_url }}"
    - name: gitRevision
      value: "{{ revision }}"
    - name: contextDir
      value: .
    - name: imageName
      value: docker.io/zroubalik/test-function-pac:latest
    - name: builderImage
      value: registry.access.redhat.com/ubi8/nodejs-16
    - name: buildEnvs
      value:
      - =
  pipelineRef:
    name: test-function-pac-s2i-git-pipeline
  #serviceAccountName: pipeline
  timeout: 1h0m0s
  workspaces:
    - name: source-workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
      subPath: source  
  # - name: source-workspace
  #   persistentVolumeClaim:
  #     claimName: viewer-s2i-git-pipeline-pvc
  #   subPath: source
    - name: dockerconfig-workspace
      secret:
        secretName: test-function-pac-pack-git-pipeline-secret
